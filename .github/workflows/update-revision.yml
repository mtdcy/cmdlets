---
name: Update revision

on:
  schedule:
    - cron: '0 0 * * *'  # daily

  push:
    paths:
      - .github/workflows/update-revision.yml
    branches:
      - main

  workflow_dispatch: null

jobs:
  updater:
    runs-on: ubuntu-latest
    container: ${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:ubuntu-latest
    steps:
      - name: Checkout (main)
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.COMMIT_TOKEN }}

      - name: Update (revision)
        shell: bash
        run: |
          pwd -P

          git config --global user.name "bot"
          git config --global user.email "bot@mtdcy.top"
          git config --global --add safe.directory "$(pwd -P)"

          export CL_NJOBS=1

          commits=/tmp/commits-$$.txt
          for ulib in libs/*; do
            ulib="$(basename "${ulib%.u}")"

            # ignores
            [[ "$ulib" =~ ^ALL ]] && continue
            [[ "$ulib" =~ ^@   ]] && continue
            [[ "$ulib" =~ ^\.  ]] && continue

            # update revision
            (
              . ulib.sh
              load $ulib

              [ -n "$upkg_ver" ] || exit

              trap "git checkout 'libs/$ulib.u'" EXIT

              IFS='=.' read -r m n r _ <<< "$upkg_ver"

              if test -n "$r"; then
                newver="$m.$n.$((r+1))"
                sed -e "s/upkg_ver=.*$/upkg_ver=$newver/" \
                    -e 's/upkg_rev=.*$/upkg_rev=0/' \
                    -i "libs/$ulib.u"

                fetch "$ulib" || exit
              elif test -n "$n"; then
                newver="$m.$((n+1))"
                sed -e "s/upkg_ver=.*$/upkg_ver=$newver/" \
                    -e 's/upkg_rev=.*$/upkg_rev=0/' \
                    -i "libs/$ulib.u"

                fetch "$ulib" || exit
              else
                exit
              fi

              ulogi "updated $ulib => $newver"
              IFS=' ' read -r sha _ <<< "$(sha256sum "packages/$upkg_zip")"
              sed -e "s/upkg_sha=.*$/upkg_sha=$sha/" \
                  -i "libs/$ulib.u"

              git add "libs/$ulib.u"
              echo "updated $ulib => $newver" >> "$commits"
            ) || true
          done

          test -f "$commits" || exit 0

          git status

          git commit -F- <<EOF
          [AutoUpdated] update libs

          $(cat "$commits")
          EOF

          git push

      # sync only packages
      - name: Deploy (packages)
        if: ${{ vars.ARTIFACTS_REMOTE_HOST != '' }}
        uses: actions/rsync@7.0.1
        with:
          switches: -avc
          path: packages/
          remote_path: ${{ vars.ARTIFACTS_REMOTE_PATH }}/packages/
          remote_host: ${{ vars.ARTIFACTS_REMOTE_HOST }}
          remote_port: ${{ vars.ARTIFACTS_REMOTE_PORT }}
          remote_user: ${{ vars.ARTIFACTS_REMOTE_USER }}
          remote_key: ${{ secrets.ARTIFACTS_REMOTE_TOKEN }}
