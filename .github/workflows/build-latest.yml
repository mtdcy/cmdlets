---
name: Build cmdlets

on:
  push:
    paths:
      - libs/**.s
    branches:
      - main

  workflow_dispatch:
    inputs:
      cmdlets:
        type: string
        description: Which cmdlets to build

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch packages
        shell: bash
        run: |-
          export CL_MIRRORS="${{ vars.MIRRORS }}"

          ./.github/scripts/prepare.sh "${{ github.event.inputs.cmdlets }}"

      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            packages

      - name: Deploy (rsync)
        # uses: burnett01/rsync-deployments@7.0.1
        uses: https://git.mtdcy.top/actions/rsync@7.0.1
        with:
          switches: -avc
          path: packages/
          remote_path: ${{ vars.ARTIFACTS_REMOTE_PATH }}/packages/
          remote_host: ${{ vars.ARTIFACTS_REMOTE_HOST }}
          remote_port: ${{ vars.ARTIFACTS_REMOTE_PORT }}
          remote_user: ${{ vars.ARTIFACTS_REMOTE_USER }}
          remote_key: ${{ secrets.ARTIFACTS_REMOTE_TOKEN }}

  build:
    needs: prepare
    runs-on: ${{ matrix.machine }}
    container: ${{ matrix.builder }}
    if: ${{ vars.LOCAL_REGISTRY == 'lcr.io' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # for arm64-apple-darwin or x86_64-apple-darwin
          - machine: macos-latest
          # for x86_64-linux-gnu
          - machine: ubuntu-latest
            builder: lcr.io/mtdcy/builder:ubuntu-22.04
          # for aarch64-linux-gnu
          - machine: ubuntu-latest-arm
            builder: lcr.io/mtdcy/builder:ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.COMMIT_TOKEN }}
          fetch-depth: 0

      - name: Download packages
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: |
            packages

      - name: Build
        shell: bash
        run: |-
          export CL_ARTIFACTS="${{ vars.ARTIFACTS_REMOTE_USER }}@${{ vars.ARTIFACTS_REMOTE_HOST }}:${{ vars.ARTIFACTS_REMOTE_PORT }}:${{ vars.ARTIFACTS_REMOTE_PATH }}"
          export CL_ARTIFACTS_TOKEN="${{ secrets.ARTIFACTS_REMOTE_TOKEN }}"
          export CL_NOTIFY="${{ vars.NOTIFY_WEBHOOK }}${{ secrets.NOTIFY_TOKEN }}"
          export CL_MIRRORS="${{ vars.MIRRORS }}"

          ./.github/scripts/build.sh "${{ github.event.inputs.cmdlets }}"
