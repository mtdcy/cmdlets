---
name: Build cmdlets latest

on:
  push:
    paths:
      - ulib.sh
      - libs/**.u
      - .github/workflows/build-latest.yml
      - .github/dockerfiles/Dockerfile
      - .github/scripts/**
    branches:
      - main

  workflow_dispatch:
    inputs:
      cmdlets:
        type: string
        description: Which cmdlets to build

env:
  platforms: linux/amd64,linux/arm64

jobs:
  build-with-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          #- ubuntu-latest
          - alpine-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.READ_TOKEN }}
          fetch-depth: 2

      - name: Prepare
        shell: bash
        run: |
          echo "${{ vars.ARTIFACTS_REMOTE_USER }}@${{ vars.ARTIFACTS_REMOTE_HOST }}:${{ vars.ARTIFACTS_REMOTE_PORT }}:${{ vars.ARTIFACTS_REMOTE_PATH }}" > cl_artifacts
          echo "${{ vars.NOTIFY_WEBHOOK }}${{ secrets.NOTIFY_TOKEN }}" > cl_notify
          echo "${{ secrets.ARTIFACTS_REMOTE_TOKEN }}" > cl_ssh_token
          echo "${{ vars.MIRRORS }}" > cl_mirrors

          ./.github/scripts/prepare.sh "${{ github.event.inputs.cmdlets }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Build (QEMU + buildx)
        uses: docker/build-push-action@v6
        with:
          push: false
          context: .
          file: .github/dockerfiles/Dockerfile
          platforms: ${{ env.platforms }}
          build-contexts: |-
            ubuntu:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.distro }}
