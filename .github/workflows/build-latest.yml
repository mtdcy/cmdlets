---
name: Build cmdlets latest

on:
  push:
    paths:
      - Makefile
      - ulib.sh
      - libs/**.u
      - .github/workflows/build-latest.yml
      - .github/dockerfiles/Dockerfile
    branches:
      - main

  workflows_dispatch:

jobs:
  build-with-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - ubuntu-latest
          - alpine-latest

    steps:
      - name: Checkout (main)
        uses: actions/checkout@v3
        with:
          # read only token
          token: ${{ secrets.READ_TOKEN }}
          fetch-depth: 2

      - name: Prepare
        id: prepare
        shell: bash
        run: |
          set -x
          # chown -R buildbot:buildbot .

          # fix: detected dubious ownership in repository
          git config --global --add safe.directory "$PWD"

          files=($(git show --pretty="" --name-only ${{ github.sha }} | grep -w "^libs")) || true
          for x in "${files[@]}"; do
            x=$(basename ${x%.u})
            [[ "$x" =~ ^\. ]] && continue  ## ignored files
            cmdlets+=("$x")
          done
          [ -n "${cmdlets[*]}" ] || cmdlets=(zlib)
          echo "cmdlets=$(IFS=','; echo "${cmdlets[*]}")" | tee -a $GITHUB_OUTPUT

          # for rsync
          cat << EOF > ssh_id_rsa
          ${{ secrets.ARTIFACTS_REMOTE_TOKEN }}
          EOF
          chmod 0600 ssh_id_rsa

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx
        if: ${{ vars.LOCAL_REGISTRY == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Setup buildx (local registry)
        if: ${{ vars.LOCAL_REGISTRY }}
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            debug = true
            [registry."${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."docker.io"]
              mirrors = ["registry.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."ghcr.io"]
              mirrors = ["ghcr.${{ vars.LOCAL_REGISTRY }}"]
              http = true
            [registry."lscr.io"]
              mirrors = ["lscr.${{ vars.LOCAL_REGISTRY }}"]
              http = true

      - name: Build (QEMU + buildx)
        uses: docker/build-push-action@v6
        with:
          push: false
          context: .
          file: .github/dockerfiles/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-contexts: |
            ubuntu:latest=docker-image://${{ vars.REGISTRY }}/${{ vars.REGISTRY_USER }}/builder:${{ matrix.distro }}
          build-args: |
            NJOBS=1
            UPKG_MIRROR=${{ vars.MIRRORS }}
            CMDLETS=${{ steps.prepare.outputs.cmdlets }}
            ARTIFACTS_REMOTE_PATH=${{ vars.ARTIFACTS_REMOTE_PATH }}
            ARTIFACTS_REMOTE_HOST=${{ vars.ARTIFACTS_REMOTE_HOST }}
            ARTIFACTS_REMOTE_PORT=${{ vars.ARTIFACTS_REMOTE_PORT }}
            ARTIFACTS_REMOTE_USER=${{ vars.ARTIFACTS_REMOTE_USER }}

      - name: Notify on failure
        if: failure()
        shell: bash
        run: |-
          curl --version
          curl -vL ${{ vars.NOTIFY_WEBHOOK }} \
              -H 'Content-Type: application/json' \
              --data @<(cat <<EOF
              {
                "token": "${{ secrets.NOTIFY_TOKEN }}",
                "title": "${{ github.repository }} ${{ job.status }}",
                "text":  "$(git show --abbrev-commit -s ${{ github.sha }} | sed 's/$/\\n/g')"
              }
          EOF
              )
